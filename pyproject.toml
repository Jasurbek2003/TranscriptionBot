[project]
name = "transcriptionbot"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.13"
dependencies = [
    "aiodns==3.2.0",
    "aiofiles==24.1.0",
    "aiogram==3.22.0",
    "aiohttp==3.10.5",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "jinja2>=3.1.4",
    "itsdangerous>=2.2.0",
    "babel==2.16.0",
    "bandit==1.7.9",
    "black==24.8.0",
    "boto3==1.34.158",
    "celery[redis]==5.4.0",
    "certifi==2024.7.4",
    "charset-normalizer==3.3.2",
    "cryptography==42.0.8",
    "django==5.1.2",
    "django-admin-interface==0.28.8",
    "django-celery-beat==2.7.0",
    "django-celery-results==2.5.1",
    "django-cors-headers==4.4.0",
    "django-debug-toolbar==4.4.6",
    "django-environ==0.11.2",
    "django-extensions==3.2.3",
    "django-filter==24.3",
    "django-guardian==2.4.0",
    "django-import-export==4.1.0",
    "django-querycount==0.8.3",
    "django-rangefilter==0.9.1",
    "django-ratelimit==4.1.0",
    "django-redis==5.4.0",
    "django-silk==5.1.0",
    "djangorestframework==3.15.2",
    "drf-spectacular==0.27.2",
    "factory-boy==3.3.0",
    "faker==26.3.0",
    "ffmpeg-python==0.2.0",
    "flake8==7.1.1",
    "flower==2.0.1",
    "freezegun==1.5.1",
    "google-cloud-speech==2.26.1",
    "google-generativeai>=0.7.2",
    "hiredis==3.2.1",
    "httpx==0.27.0",
    "ipdb==0.13.13",
    "ipython==8.26.0",
    "isort==5.13.2",
    "loguru==0.7.2",
    "magic-filter==1.0.12",
    "mkdocs==1.6.0",
    "mkdocs-material==9.5.31",
    "moviepy==1.0.3",
    "mypy==1.11.1",
    "numpy==2.3.3",
    "openai==1.42.0",
    "openpyxl==3.1.5",
    "pandas==2.3.2",
    "pgcli==4.1.0",
    "phonenumbers==8.13.42",
    "pillow==10.4.0",
    "pre-commit==3.8.0",
    "psycopg2==2.9.10",
    "pycryptodome==3.20.0",
    "pydantic==2.8.2",
    "pydantic-settings==2.4.0",
    "pydub==0.25.1",
    "pyjwt==2.9.0",
    "pylint==3.2.6",
    "pylint-django==2.5.5",
    "pytest==8.3.2",
    "pytest-asyncio==0.24.0",
    "pytest-cov==5.0.0",
    "pytest-django==4.8.0",
    "pytest-mock==3.14.0",
    "python-dateutil==2.9.0",
    "python-dotenv==1.0.1",
    "python-json-logger==2.0.7",
    "python-multipart==0.0.9",
    "pytz==2024.1",
    "redis==5.0.8",
    "requests==2.32.3",
    "responses==0.25.3",
    "safety==3.2.5",
    "sentry-sdk==2.13.0",
    "speechrecognition==3.14.3",
    "sphinx==7.4.7",
    "sphinx-rtd-theme==2.0.0",
    "urllib3==2.2.2",
    "validators==0.33.0",
    "watchdog==4.0.2",
    "werkzeug==3.0.3",
]

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | migrations
  | \.pytest_cache
  | \.mypy_cache
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
extend_skip = ["migrations", ".venv", "venv"]
known_first_party = ["bot", "core", "services", "apps"]
known_django = ["django"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "migrations/",
    "tests/",
    ".venv/",
    "venv/"
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.development"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["tests"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if settings.DEBUG:",
]

[tool.bandit]
exclude_dirs = ["/tests", "/.venv", "/venv", "/migrations", "*_backup.py"]
skips = ["B101", "B104", "B306", "B311", "B324", "B404", "B603", "B607"]

[tool.pylint.messages_control]
disable = [
    "C0111", # missing-docstring
    "R0903", # too-few-public-methods
    "C0103", # invalid-name
]
max-line-length = 100

[tool.pylint.master]
load-plugins = ["pylint_django"]
django-settings-module = "config.settings.development"
