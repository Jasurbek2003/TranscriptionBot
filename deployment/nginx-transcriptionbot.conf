# Nginx configuration for TranscriptionBot
# Domain: transcription.avlo.ai

# Rate limiting
limit_req_zone $binary_remote_addr zone=transcription_limit:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=transcription_conn:10m;

# HTTP - redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name transcription.avlo.ai www.transcription.avlo.ai;

    # Allow Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - main application
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name transcription.avlo.ai www.transcription.avlo.ai;

    # SSL Configuration - Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/transcription.avlo.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/transcription.avlo.ai/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/transcription.avlo.ai/chain.pem;

    # SSL Security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Logging
    access_log /var/log/nginx/transcriptionbot_access.log;
    error_log /var/log/nginx/transcriptionbot_error.log;

    # Client upload size (for audio/video files)
    client_max_body_size 100M;
    client_body_timeout 120s;

    # Apply rate limiting
    limit_req zone=transcription_limit burst=20 nodelay;
    limit_conn transcription_conn 10;

    # Static files
    location /static/ {
        alias /opt/applications/projects/TranscriptionBot/TranscriptionBot/django_admin/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Media files
    location /media/ {
        alias /opt/applications/projects/TranscriptionBot/TranscriptionBot/django_admin/media/;
        expires 7d;
        add_header Cache-Control "public";

        # Security: prevent execution of uploaded files
        location ~* \.(php|py|pl|sh|cgi)$ {
            deny all;
        }
    }

    # Proxy to Django application
    location / {
        proxy_pass http://127.0.0.1:8100;
        proxy_http_version 1.1;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint (if you create one)
    location /health/ {
        access_log off;
        proxy_pass http://127.0.0.1:8100;
        proxy_set_header Host $host;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
